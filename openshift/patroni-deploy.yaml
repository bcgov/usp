apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${PATRONI_NAME}
  annotations:
    description: >-
      Patroni Postgresql database cluster, with persistent storage.
labels:
  project: ${PROJECT}
  service: ${PATRONI_NAME}
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      name: ${PATRONI_NAME}-master
      labels:
        cluster-name: ${PATRONI_NAME}
    spec:
      ports:
        - port: 5432
          protocol: TCP
          targetPort: 5432
      selector:
        role: master
        cluster-name: ${PATRONI_NAME}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: ${PATRONI_NAME}
      labels:
        cluster-name: ${PATRONI_NAME}
        app.kubernetes.io/part-of: ${LABEL_NAME}
    spec:
      replicas: ${{REPLICAS}}
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          statefulset: ${PATRONI_NAME}
          cluster-name: ${PATRONI_NAME}
      serviceName: ${PATRONI_NAME}
      template:
        metadata:
          labels:
            statefulset: ${PATRONI_NAME}
            cluster-name: ${PATRONI_NAME}
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: statefulset
                        operator: In
                        values:
                          - ${PATRONI_NAME}
                  topologyKey: "kubernetes.io/hostname"
          containers:
            - env:
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: status.podIP
                - name: PATRONI_KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: PATRONI_KUBERNETES_LABELS
                  value: '{"cluster-name": "${NAME}"}'
                - name: PATRONI_SUPERUSER_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: superuser-username
                      name: ${PATRONI_NAME}-creds
                - name: PATRONI_SUPERUSER_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: superuser-password
                      name: ${PATRONI_NAME}-creds
                - name: PATRONI_REPLICATION_USERNAME
                  valueFrom:
                    secretKeyRef:
                      key: replication-username
                      name: ${PATRONI_NAME}-creds
                - name: PATRONI_REPLICATION_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: replication-password
                      name: ${PATRONI_NAME}-creds
                - name: APP_USER
                  valueFrom:
                    secretKeyRef:
                      key: database-user
                      name: ${PATRONI_NAME}-creds
                - name: APP_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: database-password
                      name: ${PATRONI_NAME}-creds
                - name: APP_DATABASE
                  valueFrom:
                    secretKeyRef:
                      key: database-name
                      name: ${PATRONI_NAME}-creds
                - name: PATRONI_SCOPE
                  value: ${PATRONI_NAME}
                - name: PATRONI_NAME
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.name
                - name: PATRONI_LOG_LEVEL
                  value: INFO
                - name: PATRONI_POSTGRESQL_DATA_DIR
                  value: /home/postgres/pgdata/pgroot/data
                - name: PATRONI_POSTGRESQL_PGPASS
                  value: /tmp/pgpass
                - name: PATRONI_POSTGRESQL_LISTEN
                  value: 0.0.0.0:5432
                - name: PATRONI_RESTAPI_LISTEN
                  value: 0.0.0.0:8008
              image: ${IMAGE_REGISTRY}/${BUILD_NAMESPACE}/${IMAGE_STREAM_TAG}
              imagePullPolicy: Always
              name: ${PATRONI_NAME}
              ports:
                - containerPort: 8008
                  protocol: TCP
                - containerPort: 5432
                  protocol: TCP
              resources:
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
              readinessProbe:
                initialDelaySeconds: 20
                timeoutSeconds: 25
                failureThreshold: 4
                periodSeconds: 30
                successThreshold: 1
                exec:
                  command:
                    - /usr/bin/env
                    - bash
                    - -c
                    - |
                      set -Eeuo pipefail && df "${PATRONI_POSTGRESQL_DATA_DIR:-/home/postgres/pgdata}" --output=pcent | tail -n 1 | awk '{if ($1+0 > 90) exit 1; else exit 0;}' && pg_isready -q && curl -s localhost:8008/readiness | jq -e ". | select(.state == \"running\")"
              volumeMounts:
                - mountPath: /home/postgres/pgdata
                  name: ${PATRONI_NAME}
          serviceAccountName: ${PATRONI_NAME}
      updateStrategy:
        type: RollingUpdate
      volumeClaimTemplates:
        - metadata:
            name: ${PATRONI_NAME}
          spec:
            storageClassName: ${STORAGE_CLASS}
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: ${PVC_SIZE}
parameters:
  - name: PATRONI_NAME
    value: usp-patroni
  - name: LABEL_NAME
    required: true
    description: some desc for this component
  - name: PROJECT
    value: usp
  - name: REPLICAS
    description: |
      The number of StatefulSet replicas to use.
    displayName: REPLICAS
    value: '3'
  - name: CPU_REQUEST
    description: |
      Starting amount of CPU the container can use.
    displayName: CPU REQUEST
    value: '50m'
  - name: CPU_LIMIT
    description:
      Maximum amount of CPU the container can use.
    displayName: CPU Limit
    value: '150m'
  - name: MEMORY_REQUEST
    description:
      Starting amount of memory the container can use.
    displayName: Memory Request
    value: 100Mi
  - name: MEMORY_LIMIT
    description: Maximum amount of memory the container can use.
    displayName: Memory Limit
    value: 200Mi
  - name: BUILD_NAMESPACE
    description: |
      The OpenShift Namespace where the patroni and postgresql
      ImageStream resides.
    displayName: ImageStream Namespace
    required: true
  - name: IMAGE_STREAM_TAG
    description: |
      Patroni ImageTag
    value: usp-patroni:12.4-latest
  - name: PVC_SIZE
    description:
      The size of the persistent volume to create.
    displayName: Persistent Volume Size
    value: 500Mi
  - name: STORAGE_CLASS
    value: netapp-file-standard
  - name: IMAGE_REGISTRY
    value: image-registry.openshift-image-registry.svc:5000
